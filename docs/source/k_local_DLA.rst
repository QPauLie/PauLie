Uniquely k-local Dynamical Lie Algebras
#######################################

This page provides an example of a Dynamical Lie Algebra (DLA) that can only be
generated by a Hamiltonian with k-local interactions where :math:`k>2`.

Background
==========

The dynamics of a quantum system under a time-independent Hamiltonian :math:`H` are governed
by the unitary evolution :math:`U(t) = e^{-iHt}`. The corresponding Lie algebra is known as the
Dynamical Lie Algebra (DLA), which is generated by taking repeated commutators of the terms
in the Hamiltonian.

A key result, detailed in `Nature Quantum Information 10, 37 (2024) <https://www.nature.com/articles/s41534-024-00900-2>`_,
classifies all possible DLAs that can be generated by **2-local** Hamiltonians.
These algebras are restricted to direct sums of :math:`\mathfrak{u}(1)`, :math:`\mathfrak{so}(m)`,
:math:`\mathfrak{su}(2^k)`, and :math:`\mathfrak{sp}(2^{k-1})`.

However, Hamiltonians with **k>2-local** interactions can generate DLAs outside this classification.
We demonstrate this using ``PauLie`` by constructing the exceptional Lie algebra :math:`\mathfrak{g}_2`,
which cannot be generated by any 2-local Hamiltonian.

An Example: The Exceptional Lie Algebra :math:`\mathfrak{g}_2` on 3 Qubits
======================================================================

The exceptional Lie algebra :math:`\mathfrak{g}_2` is the smallest of the five exceptional
Lie algebras, with dimension 14. A well-known construction on 3 qubits uses a
Hamiltonian containing 3-local interactions.

We use the generator set from `Phys. Rev. Lett. 128, 090503 (2022) <https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.128.090503>`_.

**Note:** Classification of :math:`\mathfrak{g}_2` is a feature of the latest versions of ``PauLie``.
The code below uses the most recent API.

.. code-block:: python

   from paulie import get_algebra
   from paulie.common.pauli_string_factory import get_pauli_string as p

   # A standard generator set for the exceptional Lie algebra g_2 on 3 qubits.
   g2_generators = p(["XXX", "YYY", "ZIZ", "IZI", "IIZ"])

   # Compute the Dynamical Lie Algebra
   algebra = get_algebra(g2_generators)

   # Print the results
   print(f"Number of qubits: {g2_generators.num_qubits}")
   print(f"Generators: {[str(g) for g in g2_generators]}")
   print(f"Generated DLA: {algebra}")
   print(f"Dimension of the algebra: {algebra.dimension}")

**Expected Output (from a correct installation):**

.. code-block:: text

   Number of qubits: 3
   Generators: ['XXX', 'YYY', 'ZIZ', 'IZI', 'IIZ']
   Generated DLA: g_2
   Dimension of the algebra: 14

This result explicitly demonstrates a DLA that is uniquely generated by a set of operators
containing k>2 local terms.

Physical Relevance
==================

The existence of uniquely k-local DLAs has important physical implications:

1.  **Quantum Simulation:** Effective Hamiltonians in condensed matter physics can
    feature higher-order, k-body terms whose dynamics are captured by DLAs like :math:`\mathfrak{g}_2`.

2.  **Quantum Error Correction:** Stabilizers in advanced quantum
    error-correcting codes are often k-local. The DLA characterizes the
    algebra of available logical operations.

3.  **Quantum Control:** The DLA determines the set of gates realizable by a given
    set of controls. Generating :math:`\mathfrak{g}_2` implies access to a richer set of operations
    than is possible with only 2-local controls.